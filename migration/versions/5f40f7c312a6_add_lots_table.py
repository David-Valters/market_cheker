"""Add lots table

Revision ID: 5f40f7c312a6
Revises: 907155435c3a
Create Date: 2025-07-25 13:26:39.292245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import json
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision: str = '5f40f7c312a6'
down_revision: Union[str, None] = '907155435c3a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # Створення нової таблиці lots
    op.create_table(
        'lots',
        sa.Column('lot_id', sa.String(), nullable=False),
        sa.Column('skin_id', sa.String(), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('serial', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['skin_id'], ['top_lots.skin_id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('lot_id')
    )

    # --- ПЕРЕНЕСЕННЯ ДАНИХ ---
    conn = op.get_bind()
    rows = conn.execute(text("SELECT skin_id, lot_ids FROM top_lots")).fetchall()

    for skin_id, lot_ids_json in rows:
        try:
            lot_ids = json.loads(lot_ids_json)
        except Exception:
            lot_ids = []
        for lot_id in lot_ids:
            # Заглушка — якщо хочеш додати ціну/серійник пізніше
            conn.execute(
                text("INSERT INTO lots (lot_id, skin_id, price, serial) VALUES (:lot_id, :skin_id, :price, :serial)"),
                {"lot_id": lot_id, "skin_id": skin_id, "price": 0.0, "serial": "unknown"}
            )

    # Потім — видалення старої колонки
    op.drop_column('top_lots', 'lot_ids')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('top_lots', sa.Column('lot_ids', sa.TEXT(), nullable=False))
    op.drop_table('lots')
    # ### end Alembic commands ###
